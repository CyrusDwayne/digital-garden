{"expireTime":9007200867590239000,"key":"gatsby-plugin-mdx-entire-payload-ef7bd97a09c2636e9abc7d3c3e92018d-","val":{"mdast":{"type":"root","children":[{"type":"jsx","value":"<IntroParagraph>","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":17,"offset":17},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Understanding by Design","position":{"start":{"line":4,"column":3,"offset":21},"end":{"line":4,"column":26,"offset":44},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":28,"offset":46},"indent":[]}},{"type":"text","value":" (or UbD) is one of our core pillars at ","position":{"start":{"line":4,"column":28,"offset":46},"end":{"line":4,"column":68,"offset":86},"indent":[]}},{"type":"link","title":null,"url":"https://egghead.io/","children":[{"type":"text","value":"egghead","position":{"start":{"line":4,"column":69,"offset":87},"end":{"line":4,"column":76,"offset":94},"indent":[]}}],"position":{"start":{"line":4,"column":68,"offset":86},"end":{"line":4,"column":98,"offset":116},"indent":[]}},{"type":"text","value":". It's an approach to designing learning experiences that begin with the end in mind. ","position":{"start":{"line":4,"column":98,"offset":116},"end":{"line":4,"column":184,"offset":202},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":184,"offset":202},"indent":[]}},{"type":"jsx","value":"</IntroParagraph>","position":{"start":{"line":6,"column":1,"offset":204},"end":{"line":6,"column":18,"offset":221},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You start with the goals of what you want someone else to learn, and ","position":{"start":{"line":8,"column":1,"offset":223},"end":{"line":8,"column":70,"offset":292},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"backwards plan","position":{"start":{"line":8,"column":72,"offset":294},"end":{"line":8,"column":86,"offset":308},"indent":[]}}],"position":{"start":{"line":8,"column":70,"offset":292},"end":{"line":8,"column":88,"offset":310},"indent":[]}},{"type":"text","value":" from that point.","position":{"start":{"line":8,"column":88,"offset":310},"end":{"line":8,"column":105,"offset":327},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":223},"end":{"line":8,"column":105,"offset":327},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This seems obvious when you say it, but when most of us go to teach something, we look at the big pile of material we ","position":{"start":{"line":10,"column":1,"offset":329},"end":{"line":10,"column":119,"offset":447},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"could","position":{"start":{"line":10,"column":120,"offset":448},"end":{"line":10,"column":125,"offset":453},"indent":[]}}],"position":{"start":{"line":10,"column":119,"offset":447},"end":{"line":10,"column":126,"offset":454},"indent":[]}},{"type":"text","value":" teach – all the tips and principles and techniques we have at hand – and organise them into little related clusters and try to stumble towards some vague end learning goal.","position":{"start":{"line":10,"column":126,"offset":454},"end":{"line":10,"column":299,"offset":627},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":329},"end":{"line":10,"column":299,"offset":627},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is forwards planning. It seems logical. Except if we don't pick our destination ahead of time, it's just wandering around without a path. Hoping we end up somewhere nice by chance.","position":{"start":{"line":12,"column":1,"offset":629},"end":{"line":12,"column":186,"offset":814},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":629},"end":{"line":12,"column":186,"offset":814},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"What if we reverse it?","position":{"start":{"line":14,"column":1,"offset":816},"end":{"line":14,"column":23,"offset":838},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":816},"end":{"line":14,"column":23,"offset":838},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Understanding by Design\",\"slug\":\"ubd\",\"updated\":\"2020-06-23T00:00:00.000Z\",\"published\":true,\"type\":[\"note\"],\"growthStage\":\"Seedling\",\"topics\":[\"Collaborative Learning\",\"Design\"]}","position":{"start":{"line":18,"column":1,"offset":842},"end":{"line":18,"column":217,"offset":1058},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":18,"column":217,"offset":1058}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Understanding by Design\",\n  \"slug\": \"ubd\",\n  \"updated\": \"2020-06-23T00:00:00.000Z\",\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"growthStage\": \"Seedling\",\n  \"topics\": [\"Collaborative Learning\", \"Design\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar IntroParagraph = makeShortcode(\"IntroParagraph\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(IntroParagraph, {\n    mdxType: \"IntroParagraph\"\n  }, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Understanding by Design\"), \" (or UbD) is one of our core pillars at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://egghead.io/\"\n  }), \"egghead\"), \". It's an approach to designing learning experiences that begin with the end in mind. \")), mdx(\"p\", null, \"You start with the goals of what you want someone else to learn, and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"backwards plan\"), \" from that point.\"), mdx(\"p\", null, \"This seems obvious when you say it, but when most of us go to teach something, we look at the big pile of material we \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"could\"), \" teach \\u2013 all the tips and principles and techniques we have at hand \\u2013 and organise them into little related clusters and try to stumble towards some vague end learning goal.\"), mdx(\"p\", null, \"This is forwards planning. It seems logical. Except if we don't pick our destination ahead of time, it's just wandering around without a path. Hoping we end up somewhere nice by chance.\"), mdx(\"p\", null, \"What if we reverse it?\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Understanding by Design\",\n  \"slug\": \"ubd\",\n  \"updated\": \"2020-06-23T00:00:00.000Z\",\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"growthStage\": \"Seedling\",\n  \"topics\": [\"Collaborative Learning\", \"Design\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst IntroParagraph = makeShortcode(\"IntroParagraph\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <IntroParagraph mdxType=\"IntroParagraph\">\n      <p><strong parentName=\"p\">{`Understanding by Design`}</strong>{` (or UbD) is one of our core pillars at `}<a parentName=\"p\" {...{\n          \"href\": \"https://egghead.io/\"\n        }}>{`egghead`}</a>{`. It's an approach to designing learning experiences that begin with the end in mind. `}</p>\n    </IntroParagraph>\n    <p>{`You start with the goals of what you want someone else to learn, and `}<strong parentName=\"p\">{`backwards plan`}</strong>{` from that point.`}</p>\n    <p>{`This seems obvious when you say it, but when most of us go to teach something, we look at the big pile of material we `}<em parentName=\"p\">{`could`}</em>{` teach – all the tips and principles and techniques we have at hand – and organise them into little related clusters and try to stumble towards some vague end learning goal.`}</p>\n    <p>{`This is forwards planning. It seems logical. Except if we don't pick our destination ahead of time, it's just wandering around without a path. Hoping we end up somewhere nice by chance.`}</p>\n    <p>{`What if we reverse it?`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}