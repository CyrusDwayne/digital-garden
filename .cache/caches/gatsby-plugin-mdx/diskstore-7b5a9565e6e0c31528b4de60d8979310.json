{"expireTime":9007200867590240000,"key":"gatsby-plugin-mdx-entire-payload-da3cb9e4fd67ecc17bf77e1cdfc0f36a-","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://xstate.js.org/","children":[{"type":"text","value":"xState","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":8,"offset":8},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":33,"offset":33},"indent":[]}},{"type":"text","value":" is a snazzy way to manage JavaScript application state using visual state charts. \nIt's a pretty wonderful tool for making sure you think through every possible edge case of an application.","position":{"start":{"line":2,"column":33,"offset":33},"end":{"line":3,"column":107,"offset":223},"indent":[1]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":107,"offset":223},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"There's also a handy ","position":{"start":{"line":5,"column":1,"offset":225},"end":{"line":5,"column":22,"offset":246},"indent":[]}},{"type":"link","title":null,"url":"https://xstate.js.org/viz/","children":[{"type":"text","value":"visualiser tool","position":{"start":{"line":5,"column":23,"offset":247},"end":{"line":5,"column":38,"offset":262},"indent":[]}}],"position":{"start":{"line":5,"column":22,"offset":246},"end":{"line":5,"column":67,"offset":291},"indent":[]}},{"type":"text","value":" that synchronizes your code and visuals. If you edit one, the other changes to match. ","position":{"start":{"line":5,"column":67,"offset":291},"end":{"line":5,"column":154,"offset":378},"indent":[]}},{"type":"jsx","value":"<span aria-role=\"image\">","position":{"start":{"line":5,"column":154,"offset":378},"end":{"line":5,"column":178,"offset":402},"indent":[]}},{"type":"text","value":"âœ¨","position":{"start":{"line":5,"column":178,"offset":402},"end":{"line":5,"column":179,"offset":403},"indent":[]}},{"type":"jsx","value":"</span>","position":{"start":{"line":5,"column":179,"offset":403},"end":{"line":5,"column":186,"offset":410},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":225},"end":{"line":5,"column":186,"offset":410},"indent":[]}},{"type":"jsx","value":"<ImageFrame alt=\"Screenshot of the xState visualizer\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_920/v1592930602/maggieappleton.com/egghead-course-notes/xstate/Screenshot_2020-06-23_at_17.41.45.png\" />","position":{"start":{"line":7,"column":1,"offset":412},"end":{"line":7,"column":224,"offset":635},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":9,"column":1,"offset":637},"end":{"line":9,"column":7,"offset":643},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's perfect for visual thinkers. If someone could just build one of these for the entire of JavaScript I'll be all set.","position":{"start":{"line":11,"column":1,"offset":645},"end":{"line":11,"column":121,"offset":765},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":645},"end":{"line":11,"column":121,"offset":765},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here's a little more illustrated detail on how this works:","position":{"start":{"line":13,"column":1,"offset":767},"end":{"line":13,"column":59,"offset":825},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":767},"end":{"line":13,"column":59,"offset":825},"indent":[]}},{"type":"jsx","value":"<BasicImage alt=\"Xstate is a tool that helps you plan out all the possible states in a JavaScript app\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_750/v1592931672/maggieappleton.com/egghead-course-notes/xstate/xState_5.png\" />","position":{"start":{"line":15,"column":1,"offset":827},"end":{"line":15,"column":248,"offset":1074},"indent":[]}},{"type":"jsx","value":"<BasicImage alt=\"There's a handy interactive visualizer tool at xstate.js.org/viz\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_860/v1592262779/maggieappleton.com/egghead-course-notes/xstate/xState_2.png\" />","position":{"start":{"line":17,"column":1,"offset":1076},"end":{"line":17,"column":228,"offset":1303},"indent":[]}},{"type":"jsx","value":"<BasicImage alt=\"A sequence of light bulbs swapping states between unlit, lit, dim, and broken.\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_900/v1592262781/maggieappleton.com/egghead-course-notes/xstate/xState_3.png\" />","position":{"start":{"line":19,"column":1,"offset":1305},"end":{"line":19,"column":242,"offset":1546},"indent":[]}},{"type":"jsx","value":"<BasicImage alt=\"We can add extra options onto our states such as actions, services, guards, and activities\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_900/v1592262777/maggieappleton.com/egghead-course-notes/xstate/xState_4.png\" />","position":{"start":{"line":21,"column":1,"offset":1548},"end":{"line":21,"column":254,"offset":1801},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you're keen to learn more xState there's two courses up on egghead that cover all the basics:","position":{"start":{"line":24,"column":1,"offset":1804},"end":{"line":24,"column":97,"offset":1900},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1804},"end":{"line":24,"column":97,"offset":1900},"indent":[]}},{"type":"jsx","value":"<a noTip href=\"https://egghead.io/courses/introduction-to-state-machines-using-xstate?af=54fd64\"><ImageFrame width=\"80%\" alt=\"Shareable Custom Hooks in React\" src=\"https://og-image-egghead-course.now.sh/introduction-to-state-machines-using-xstate\" /></a>\n<a noTip href=\"https://egghead.io/courses/construct-sturdy-uis-with-xstate?af=54fd64\"><ImageFrame width=\"80%\" alt=\"Shareable Custom Hooks in React\" src=\"https://og-image-egghead-course.now.sh/construct-sturdy-uis-with-xstate\" /></a>","position":{"start":{"line":26,"column":1,"offset":1902},"end":{"line":27,"column":233,"offset":2389},"indent":[1]}},{"type":"thematicBreak","position":{"start":{"line":30,"column":1,"offset":2392},"end":{"line":30,"column":4,"offset":2395},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Want more illustrated notes on web development?","position":{"start":{"line":32,"column":6,"offset":2402},"end":{"line":32,"column":53,"offset":2449},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":2397},"end":{"line":32,"column":53,"offset":2449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Take a look at [","position":{"start":{"line":34,"column":1,"offset":2451},"end":{"line":34,"column":17,"offset":2467},"indent":[]}},{"type":"linkReference","identifier":"building vr apps with react360","label":"Building VR Apps with React360","referenceType":"shortcut","children":[{"type":"text","value":"Building VR Apps with React360","position":{"start":{"line":34,"column":18,"offset":2468},"end":{"line":34,"column":48,"offset":2498},"indent":[]}}],"position":{"start":{"line":34,"column":17,"offset":2467},"end":{"line":34,"column":49,"offset":2499},"indent":[]}},{"type":"text","value":"], [","position":{"start":{"line":34,"column":49,"offset":2499},"end":{"line":34,"column":53,"offset":2503},"indent":[]}},{"type":"linkReference","identifier":"a journey into vue-router","label":"A Journey into Vue-Router","referenceType":"shortcut","children":[{"type":"text","value":"A Journey into Vue-Router","position":{"start":{"line":34,"column":54,"offset":2504},"end":{"line":34,"column":79,"offset":2529},"indent":[]}}],"position":{"start":{"line":34,"column":53,"offset":2503},"end":{"line":34,"column":80,"offset":2530},"indent":[]}},{"type":"text","value":"], or [","position":{"start":{"line":34,"column":80,"offset":2530},"end":{"line":34,"column":87,"offset":2537},"indent":[]}},{"type":"linkReference","identifier":"immutable data with immer and personal assistant bots","label":"Immutable Data with Immer and Personal Assistant Bots","referenceType":"shortcut","children":[{"type":"text","value":"Immutable Data with Immer and Personal Assistant Bots","position":{"start":{"line":34,"column":88,"offset":2538},"end":{"line":34,"column":141,"offset":2591},"indent":[]}}],"position":{"start":{"line":34,"column":87,"offset":2537},"end":{"line":34,"column":142,"offset":2592},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":34,"column":142,"offset":2592},"end":{"line":34,"column":143,"offset":2593},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":2451},"end":{"line":34,"column":143,"offset":2593},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"slug\":\"xstate\",\"updated\":\"2020-01-22T00:00:00.000Z\",\"title\":\"What the Fork is xState?\",\"aliases\":[\"xState\"],\"published\":true,\"type\":[\"note\"],\"topics\":[\"Illustrated Notes\",\"Web Development\",\"JavaScript\"],\"growthStage\":\"Evergreen\"}","position":{"start":{"line":36,"column":1,"offset":2595},"end":{"line":36,"column":260,"offset":2854},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":36,"column":260,"offset":2854}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"xstate\",\n  \"updated\": \"2020-01-22T00:00:00.000Z\",\n  \"title\": \"What the Fork is xState?\",\n  \"aliases\": [\"xState\"],\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"topics\": [\"Illustrated Notes\", \"Web Development\", \"JavaScript\"],\n  \"growthStage\": \"Evergreen\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ImageFrame = makeShortcode(\"ImageFrame\");\nvar BasicImage = makeShortcode(\"BasicImage\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://xstate.js.org/\"\n  }), \"xState\"), \" is a snazzy way to manage JavaScript application state using visual state charts.\\nIt's a pretty wonderful tool for making sure you think through every possible edge case of an application.\"), mdx(\"p\", null, \"There's also a handy \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://xstate.js.org/viz/\"\n  }), \"visualiser tool\"), \" that synchronizes your code and visuals. If you edit one, the other changes to match. \", mdx(\"span\", {\n    \"aria-role\": \"image\"\n  }, \"\\u2728\")), mdx(ImageFrame, {\n    alt: \"Screenshot of the xState visualizer\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_920/v1592930602/maggieappleton.com/egghead-course-notes/xstate/Screenshot_2020-06-23_at_17.41.45.png\",\n    mdxType: \"ImageFrame\"\n  }), mdx(\"br\", null), mdx(\"p\", null, \"It's perfect for visual thinkers. If someone could just build one of these for the entire of JavaScript I'll be all set.\"), mdx(\"p\", null, \"Here's a little more illustrated detail on how this works:\"), mdx(BasicImage, {\n    alt: \"Xstate is a tool that helps you plan out all the possible states in a JavaScript app\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_750/v1592931672/maggieappleton.com/egghead-course-notes/xstate/xState_5.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"There's a handy interactive visualizer tool at xstate.js.org/viz\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_860/v1592262779/maggieappleton.com/egghead-course-notes/xstate/xState_2.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"A sequence of light bulbs swapping states between unlit, lit, dim, and broken.\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_900/v1592262781/maggieappleton.com/egghead-course-notes/xstate/xState_3.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"We can add extra options onto our states such as actions, services, guards, and activities\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_900/v1592262777/maggieappleton.com/egghead-course-notes/xstate/xState_4.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(\"p\", null, \"If you're keen to learn more xState there's two courses up on egghead that cover all the basics:\"), mdx(\"a\", {\n    noTip: true,\n    href: \"https://egghead.io/courses/introduction-to-state-machines-using-xstate?af=54fd64\"\n  }, mdx(ImageFrame, {\n    width: \"80%\",\n    alt: \"Shareable Custom Hooks in React\",\n    src: \"https://og-image-egghead-course.now.sh/introduction-to-state-machines-using-xstate\",\n    mdxType: \"ImageFrame\"\n  })), mdx(\"a\", {\n    noTip: true,\n    href: \"https://egghead.io/courses/construct-sturdy-uis-with-xstate?af=54fd64\"\n  }, mdx(ImageFrame, {\n    width: \"80%\",\n    alt: \"Shareable Custom Hooks in React\",\n    src: \"https://og-image-egghead-course.now.sh/construct-sturdy-uis-with-xstate\",\n    mdxType: \"ImageFrame\"\n  })), mdx(\"hr\", null), mdx(\"h4\", null, \"Want more illustrated notes on web development?\"), mdx(\"p\", null, \"Take a look at [\", \"[Building VR Apps with React360]\", \"], [\", \"[A Journey into Vue-Router]\", \"], or [\", \"[Immutable Data with Immer and Personal Assistant Bots]\", \"]\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"slug\": \"xstate\",\n  \"updated\": \"2020-01-22T00:00:00.000Z\",\n  \"title\": \"What the Fork is xState?\",\n  \"aliases\": [\"xState\"],\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"topics\": [\"Illustrated Notes\", \"Web Development\", \"JavaScript\"],\n  \"growthStage\": \"Evergreen\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst ImageFrame = makeShortcode(\"ImageFrame\");\nconst BasicImage = makeShortcode(\"BasicImage\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://xstate.js.org/\"\n      }}>{`xState`}</a>{` is a snazzy way to manage JavaScript application state using visual state charts.\nIt's a pretty wonderful tool for making sure you think through every possible edge case of an application.`}</p>\n    <p>{`There's also a handy `}<a parentName=\"p\" {...{\n        \"href\": \"https://xstate.js.org/viz/\"\n      }}>{`visualiser tool`}</a>{` that synchronizes your code and visuals. If you edit one, the other changes to match. `}<span aria-role=\"image\">{`âœ¨`}</span></p>\n    <ImageFrame alt=\"Screenshot of the xState visualizer\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_920/v1592930602/maggieappleton.com/egghead-course-notes/xstate/Screenshot_2020-06-23_at_17.41.45.png\" mdxType=\"ImageFrame\" />\n    <br />\n    <p>{`It's perfect for visual thinkers. If someone could just build one of these for the entire of JavaScript I'll be all set.`}</p>\n    <p>{`Here's a little more illustrated detail on how this works:`}</p>\n    <BasicImage alt=\"Xstate is a tool that helps you plan out all the possible states in a JavaScript app\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_750/v1592931672/maggieappleton.com/egghead-course-notes/xstate/xState_5.png\" mdxType=\"BasicImage\" />\n    <BasicImage alt=\"There's a handy interactive visualizer tool at xstate.js.org/viz\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_860/v1592262779/maggieappleton.com/egghead-course-notes/xstate/xState_2.png\" mdxType=\"BasicImage\" />\n    <BasicImage alt=\"A sequence of light bulbs swapping states between unlit, lit, dim, and broken.\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_900/v1592262781/maggieappleton.com/egghead-course-notes/xstate/xState_3.png\" mdxType=\"BasicImage\" />\n    <BasicImage alt=\"We can add extra options onto our states such as actions, services, guards, and activities\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_900/v1592262777/maggieappleton.com/egghead-course-notes/xstate/xState_4.png\" mdxType=\"BasicImage\" />\n    <p>{`If you're keen to learn more xState there's two courses up on egghead that cover all the basics:`}</p>\n    <a noTip href=\"https://egghead.io/courses/introduction-to-state-machines-using-xstate?af=54fd64\"><ImageFrame width=\"80%\" alt=\"Shareable Custom Hooks in React\" src=\"https://og-image-egghead-course.now.sh/introduction-to-state-machines-using-xstate\" mdxType=\"ImageFrame\" /></a>\n    <a noTip href=\"https://egghead.io/courses/construct-sturdy-uis-with-xstate?af=54fd64\"><ImageFrame width=\"80%\" alt=\"Shareable Custom Hooks in React\" src=\"https://og-image-egghead-course.now.sh/construct-sturdy-uis-with-xstate\" mdxType=\"ImageFrame\" /></a>\n    <hr></hr>\n    <h4>{`Want more illustrated notes on web development?`}</h4>\n    <p>{`Take a look at [`}{`[Building VR Apps with React360]`}{`], [`}{`[A Journey into Vue-Router]`}{`], or [`}{`[Immutable Data with Immer and Personal Assistant Bots]`}{`]`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}