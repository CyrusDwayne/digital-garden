{"expireTime":9007200867590238000,"key":"gatsby-plugin-mdx-entire-payload-7ec45feb6927bf7c3f5c3a80767c6202-","val":{"mdast":{"type":"root","children":[{"type":"jsx","value":"<IntroParagraph>","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":17,"offset":17},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When it comes to web animation libraries,  ","position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":44,"offset":62},"indent":[]}},{"type":"link","title":null,"url":"https://greensock.com/","children":[{"type":"text","value":"Greensock","position":{"start":{"line":4,"column":45,"offset":63},"end":{"line":4,"column":54,"offset":72},"indent":[]}}],"position":{"start":{"line":4,"column":44,"offset":62},"end":{"line":4,"column":79,"offset":97},"indent":[]}},{"type":"text","value":" is the Rolls Royce of options. It's what powers most of those ridiculously fancy ","position":{"start":{"line":4,"column":79,"offset":97},"end":{"line":4,"column":161,"offset":179},"indent":[]}},{"type":"link","title":null,"url":"https://www.awwwards.com/","children":[{"type":"text","value":"Awwwards","position":{"start":{"line":4,"column":162,"offset":180},"end":{"line":4,"column":170,"offset":188},"indent":[]}}],"position":{"start":{"line":4,"column":161,"offset":179},"end":{"line":4,"column":198,"offset":216},"indent":[]}},{"type":"text","value":" websites.","position":{"start":{"line":4,"column":198,"offset":216},"end":{"line":4,"column":208,"offset":226},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":208,"offset":226},"indent":[]}},{"type":"jsx","value":"</IntroParagraph>","position":{"start":{"line":6,"column":1,"offset":228},"end":{"line":6,"column":18,"offset":245},"indent":[]}},{"type":"jsx","value":"<p>It's also been on my learning wish list for too long. I assumed it would be too complex. Everyone talks about how powerful the library is.","position":{"start":{"line":8,"column":1,"offset":247},"end":{"line":8,"column":142,"offset":388},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It's usually safe to assume powerful === complex.","position":{"start":{"line":10,"column":1,"offset":390},"end":{"line":10,"column":50,"offset":439},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":390},"end":{"line":10,"column":50,"offset":439},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"But once I started digging in I realised the core of the library was actually quite easy to get the hang of. There's plenty of advanced mechanisms and complexity to get wrapped up in if you want to. But they're entirely optional.","position":{"start":{"line":12,"column":1,"offset":441},"end":{"line":12,"column":230,"offset":670},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":441},"end":{"line":12,"column":230,"offset":670},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is a ","position":{"start":{"line":14,"column":1,"offset":672},"end":{"line":14,"column":11,"offset":682},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"one-scoop-plain-vanilla introduction to Greensock","position":{"start":{"line":14,"column":13,"offset":684},"end":{"line":14,"column":62,"offset":733},"indent":[]}}],"position":{"start":{"line":14,"column":11,"offset":682},"end":{"line":14,"column":64,"offset":735},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":64,"offset":735},"end":{"line":14,"column":65,"offset":736},"indent":[]}},{"type":"break","position":{"start":{"line":14,"column":65,"offset":736},"end":{"line":15,"column":1,"offset":739},"indent":[1]}},{"type":"text","value":"Without any sprinkles, nuts, or advanced functionality.","position":{"start":{"line":15,"column":1,"offset":739},"end":{"line":15,"column":56,"offset":794},"indent":[]}},{"type":"jsx","value":"</p>","position":{"start":{"line":15,"column":56,"offset":794},"end":{"line":15,"column":60,"offset":798},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":672},"end":{"line":15,"column":60,"offset":798},"indent":[1]}},{"type":"jsx","value":"<GsapScroller />","position":{"start":{"line":17,"column":1,"offset":800},"end":{"line":17,"column":17,"offset":816},"indent":[]}},{"type":"jsx","value":"<Spacer />","position":{"start":{"line":19,"column":1,"offset":818},"end":{"line":19,"column":11,"offset":828},"indent":[]}},{"type":"jsx","value":"<h3>Tweens</h3>","position":{"start":{"line":21,"column":1,"offset":830},"end":{"line":21,"column":16,"offset":845},"indent":[]}},{"type":"jsx","value":"<p>\nTweens are the basic building blocks of a Greensock animation. A tween is a single transition – an element changing from state A to state B.","position":{"start":{"line":23,"column":1,"offset":847},"end":{"line":24,"column":141,"offset":991},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"To create a tween, we target an ","position":{"start":{"line":26,"column":1,"offset":993},"end":{"line":26,"column":33,"offset":1025},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"element","position":{"start":{"line":26,"column":34,"offset":1026},"end":{"line":26,"column":41,"offset":1033},"indent":[]}}],"position":{"start":{"line":26,"column":33,"offset":1025},"end":{"line":26,"column":42,"offset":1034},"indent":[]}},{"type":"text","value":" (this can be any HTML element like a ","position":{"start":{"line":26,"column":42,"offset":1034},"end":{"line":26,"column":80,"offset":1072},"indent":[]}},{"type":"inlineCode","value":"<div>, <p>, or <svg>","position":{"start":{"line":26,"column":80,"offset":1072},"end":{"line":26,"column":102,"offset":1094},"indent":[]}},{"type":"text","value":") and pass in ","position":{"start":{"line":26,"column":102,"offset":1094},"end":{"line":26,"column":116,"offset":1108},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"variables","position":{"start":{"line":26,"column":117,"offset":1109},"end":{"line":26,"column":126,"offset":1118},"indent":[]}}],"position":{"start":{"line":26,"column":116,"offset":1108},"end":{"line":26,"column":127,"offset":1119},"indent":[]}},{"type":"text","value":".\nVariables define how the element should change over the course of the animation - whether it should move, change opacity or colour, grow big or small – you get it.","position":{"start":{"line":26,"column":127,"offset":1119},"end":{"line":27,"column":164,"offset":1284},"indent":[1]}}],"position":{"start":{"line":26,"column":1,"offset":993},"end":{"line":27,"column":164,"offset":1284},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Let's say we want to make a box go from navy blue to red, move 400 pixels on the X axis (horizontal), and grow in scale by 1.4 times the original:","position":{"start":{"line":29,"column":1,"offset":1286},"end":{"line":29,"column":147,"offset":1432},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1286},"end":{"line":29,"column":147,"offset":1432},"indent":[]}},{"type":"jsx","value":"</p>","position":{"start":{"line":30,"column":1,"offset":1433},"end":{"line":30,"column":5,"offset":1437},"indent":[]}},{"type":"jsx","value":"<Center>","position":{"start":{"line":32,"column":1,"offset":1439},"end":{"line":32,"column":9,"offset":1447},"indent":[]}},{"type":"jsx","value":"<TweenRedBigBox />","position":{"start":{"line":34,"column":1,"offset":1449},"end":{"line":34,"column":19,"offset":1467},"indent":[]}},{"type":"jsx","value":"</Center>","position":{"start":{"line":36,"column":1,"offset":1469},"end":{"line":36,"column":10,"offset":1478},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"<div class=\"giantRedBox\" background=\"navyblue\" width=\"100px\" height=\"100px\" />\n\ngsap.to('.giantRedBox', 2, { x: 400, scale: 1.4, background: 'red' })","position":{"start":{"line":38,"column":1,"offset":1480},"end":{"line":42,"column":4,"offset":1639},"indent":[1,1,1,1]}},{"type":"jsx","value":"<p>","position":{"start":{"line":44,"column":1,"offset":1641},"end":{"line":44,"column":4,"offset":1644},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here's the code to do that in Greensock.","position":{"start":{"line":46,"column":1,"offset":1646},"end":{"line":46,"column":41,"offset":1686},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1646},"end":{"line":46,"column":41,"offset":1686},"indent":[]}},{"type":"jsx","value":"</p>","position":{"start":{"line":48,"column":1,"offset":1688},"end":{"line":48,"column":5,"offset":1692},"indent":[]}},{"type":"jsx","value":"<p>","position":{"start":{"line":50,"column":1,"offset":1694},"end":{"line":50,"column":4,"offset":1697},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First we target the element using it's classname: ","position":{"start":{"line":52,"column":1,"offset":1699},"end":{"line":52,"column":51,"offset":1749},"indent":[]}},{"type":"inlineCode","value":"giantRedBox","position":{"start":{"line":52,"column":51,"offset":1749},"end":{"line":52,"column":64,"offset":1762},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":52,"column":64,"offset":1762},"end":{"line":52,"column":65,"offset":1763},"indent":[]}},{"type":"break","position":{"start":{"line":52,"column":65,"offset":1763},"end":{"line":53,"column":1,"offset":1766},"indent":[1]}},{"type":"text","value":"We then pass in a ","position":{"start":{"line":53,"column":1,"offset":1766},"end":{"line":53,"column":19,"offset":1784},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"duration","position":{"start":{"line":53,"column":20,"offset":1785},"end":{"line":53,"column":28,"offset":1793},"indent":[]}}],"position":{"start":{"line":53,"column":19,"offset":1784},"end":{"line":53,"column":29,"offset":1794},"indent":[]}},{"type":"text","value":" that defines how long it should take the animation to move from state A to state B – here it's 2 seconds.","position":{"start":{"line":53,"column":29,"offset":1794},"end":{"line":53,"column":135,"offset":1900},"indent":[]}},{"type":"break","position":{"start":{"line":53,"column":135,"offset":1900},"end":{"line":54,"column":1,"offset":1903},"indent":[1]}},{"type":"text","value":"Finally we pass in an object that contains our animation ","position":{"start":{"line":54,"column":1,"offset":1903},"end":{"line":54,"column":58,"offset":1960},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"variables","position":{"start":{"line":54,"column":59,"offset":1961},"end":{"line":54,"column":68,"offset":1970},"indent":[]}}],"position":{"start":{"line":54,"column":58,"offset":1960},"end":{"line":54,"column":69,"offset":1971},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":54,"column":69,"offset":1971},"end":{"line":54,"column":70,"offset":1972},"indent":[]}},{"type":"break","position":{"start":{"line":54,"column":70,"offset":1972},"end":{"line":55,"column":1,"offset":1975},"indent":[1]}},{"type":"inlineCode","value":"{ x: 400, scale: 1.4, background: 'red' }","position":{"start":{"line":55,"column":1,"offset":1975},"end":{"line":55,"column":44,"offset":2018},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1699},"end":{"line":55,"column":44,"offset":2018},"indent":[1,1,1]}},{"type":"jsx","value":"</p>","position":{"start":{"line":57,"column":1,"offset":2020},"end":{"line":57,"column":5,"offset":2024},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":59,"column":1,"offset":2026},"end":{"line":59,"column":4,"offset":2029},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Types of Tweens","position":{"start":{"line":61,"column":5,"offset":2035},"end":{"line":61,"column":20,"offset":2050},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2031},"end":{"line":61,"column":20,"offset":2050},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There's three types of tweens:","position":{"start":{"line":63,"column":1,"offset":2052},"end":{"line":63,"column":31,"offset":2082},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2052},"end":{"line":63,"column":31,"offset":2082},"indent":[]}},{"type":"jsx","value":"<ul>\n<li>to</li>\n<li>from</li>\n<li>fromTo</li>\n</ul>","position":{"start":{"line":64,"column":1,"offset":2083},"end":{"line":68,"column":6,"offset":2135},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":70,"column":1,"offset":2137},"end":{"line":70,"column":4,"offset":2140},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"to","position":{"start":{"line":70,"column":5,"offset":2141},"end":{"line":70,"column":7,"offset":2143},"indent":[]}}],"position":{"start":{"line":70,"column":4,"offset":2140},"end":{"line":70,"column":8,"offset":2144},"indent":[]}},{"type":"text","value":" we define the final state of the animation – what it looks like by the end.\nIt begins in the position defined in our HTML & CSS, and moves ","position":{"start":{"line":70,"column":8,"offset":2144},"end":{"line":71,"column":64,"offset":2284},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"to","position":{"start":{"line":71,"column":65,"offset":2285},"end":{"line":71,"column":67,"offset":2287},"indent":[]}}],"position":{"start":{"line":71,"column":64,"offset":2284},"end":{"line":71,"column":68,"offset":2288},"indent":[]}},{"type":"text","value":" the state we define inside our greensock tween.","position":{"start":{"line":71,"column":68,"offset":2288},"end":{"line":71,"column":116,"offset":2336},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2137},"end":{"line":71,"column":116,"offset":2336},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"<div class=\"spinningBox\" background=\"navyblue\" width=\"100px\" height=\"100px\" />\n\ngsap.to('.spinningBox', 3, { x: 400, rotation: 360 })","position":{"start":{"line":73,"column":1,"offset":2338},"end":{"line":77,"column":4,"offset":2481},"indent":[1,1,1,1]}},{"type":"jsx","value":"<Center>","position":{"start":{"line":78,"column":1,"offset":2482},"end":{"line":78,"column":9,"offset":2490},"indent":[]}},{"type":"jsx","value":"<TweenSpinningBox />","position":{"start":{"line":80,"column":1,"offset":2492},"end":{"line":80,"column":21,"offset":2512},"indent":[]}},{"type":"jsx","value":"</Center>","position":{"start":{"line":82,"column":1,"offset":2514},"end":{"line":82,"column":10,"offset":2523},"indent":[]}},{"type":"jsx","value":"<Spacer />","position":{"start":{"line":84,"column":1,"offset":2525},"end":{"line":84,"column":11,"offset":2535},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":86,"column":1,"offset":2537},"end":{"line":86,"column":4,"offset":2540},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"from","position":{"start":{"line":86,"column":5,"offset":2541},"end":{"line":86,"column":9,"offset":2545},"indent":[]}}],"position":{"start":{"line":86,"column":4,"offset":2540},"end":{"line":86,"column":10,"offset":2546},"indent":[]}},{"type":"text","value":" we define the beginning state of the animation, and it moves back to it's state defined in the HTML & CSS","position":{"start":{"line":86,"column":10,"offset":2546},"end":{"line":86,"column":116,"offset":2652},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":2537},"end":{"line":86,"column":116,"offset":2652},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"gsap.from('.reverseSpinningBox', 3, { x: 400, rotation: 360 })","position":{"start":{"line":88,"column":1,"offset":2654},"end":{"line":90,"column":4,"offset":2726},"indent":[1,1]}},{"type":"jsx","value":"<Center>","position":{"start":{"line":92,"column":1,"offset":2728},"end":{"line":92,"column":9,"offset":2736},"indent":[]}},{"type":"jsx","value":"<TweenReverseSpinningBox />","position":{"start":{"line":94,"column":1,"offset":2738},"end":{"line":94,"column":28,"offset":2765},"indent":[]}},{"type":"jsx","value":"</Center>","position":{"start":{"line":96,"column":1,"offset":2767},"end":{"line":96,"column":10,"offset":2776},"indent":[]}},{"type":"jsx","value":"<Spacer />","position":{"start":{"line":98,"column":1,"offset":2778},"end":{"line":98,"column":11,"offset":2788},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":100,"column":1,"offset":2790},"end":{"line":100,"column":4,"offset":2793},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"fromTo","position":{"start":{"line":100,"column":5,"offset":2794},"end":{"line":100,"column":11,"offset":2800},"indent":[]}}],"position":{"start":{"line":100,"column":4,"offset":2793},"end":{"line":100,"column":12,"offset":2801},"indent":[]}},{"type":"text","value":" we declare two states we want the animation to move between.","position":{"start":{"line":100,"column":12,"offset":2801},"end":{"line":100,"column":73,"offset":2862},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":2790},"end":{"line":100,"column":73,"offset":2862},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"gsap.fromTo('.hotBox', 3, { background: '#93D0D9' }, { background: '#D93654' })","position":{"start":{"line":102,"column":1,"offset":2864},"end":{"line":104,"column":4,"offset":2953},"indent":[1,1]}},{"type":"jsx","value":"<Center>","position":{"start":{"line":106,"column":1,"offset":2955},"end":{"line":106,"column":9,"offset":2963},"indent":[]}},{"type":"jsx","value":"<TweenBlueRedBox />","position":{"start":{"line":108,"column":1,"offset":2965},"end":{"line":108,"column":20,"offset":2984},"indent":[]}},{"type":"jsx","value":"</Center>","position":{"start":{"line":110,"column":1,"offset":2986},"end":{"line":110,"column":10,"offset":2995},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":112,"column":1,"offset":2997},"end":{"line":112,"column":4,"offset":3000},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Timelines","position":{"start":{"line":114,"column":5,"offset":3006},"end":{"line":114,"column":14,"offset":3015},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3002},"end":{"line":114,"column":14,"offset":3015},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Timelines are made up of tweens.\nThey group them together into a sequence.","position":{"start":{"line":115,"column":1,"offset":3016},"end":{"line":116,"column":42,"offset":3090},"indent":[1]}}],"position":{"start":{"line":115,"column":1,"offset":3016},"end":{"line":116,"column":42,"offset":3090},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Once we declare a timeline, we can chain sets of tweens onto it.","position":{"start":{"line":118,"column":1,"offset":3092},"end":{"line":118,"column":65,"offset":3156},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3092},"end":{"line":118,"column":65,"offset":3156},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const boxTimeline = gsap.timeline()\n\nboxTimeline\n.to('.flyingBox', 2, { x: 100, scale: 1.5 })\n.to('.floatingBox', 3, { x: 10 })\n.to('.flippingBox', 1, { rotation: 360 })","position":{"start":{"line":120,"column":1,"offset":3158},"end":{"line":127,"column":4,"offset":3337},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":129,"column":1,"offset":3339},"end":{"line":129,"column":4,"offset":3342},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You may see references around to multiple varieties of tweening and timelines called ","position":{"start":{"line":131,"column":1,"offset":3344},"end":{"line":131,"column":86,"offset":3429},"indent":[]}},{"type":"inlineCode","value":"TweenMax","position":{"start":{"line":131,"column":86,"offset":3429},"end":{"line":131,"column":96,"offset":3439},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":131,"column":96,"offset":3439},"end":{"line":131,"column":98,"offset":3441},"indent":[]}},{"type":"inlineCode","value":"TweenLite","position":{"start":{"line":131,"column":98,"offset":3441},"end":{"line":131,"column":109,"offset":3452},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":131,"column":109,"offset":3452},"end":{"line":131,"column":111,"offset":3454},"indent":[]}},{"type":"inlineCode","value":"TimelineMax","position":{"start":{"line":131,"column":111,"offset":3454},"end":{"line":131,"column":124,"offset":3467},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":131,"column":124,"offset":3467},"end":{"line":131,"column":130,"offset":3473},"indent":[]}},{"type":"inlineCode","value":"TimelineLite","position":{"start":{"line":131,"column":130,"offset":3473},"end":{"line":131,"column":144,"offset":3487},"indent":[]}},{"type":"text","value":".  ","position":{"start":{"line":131,"column":144,"offset":3487},"end":{"line":131,"column":147,"offset":3490},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3344},"end":{"line":131,"column":147,"offset":3490},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In late 2019 GSAP ","position":{"start":{"line":133,"column":1,"offset":3492},"end":{"line":133,"column":19,"offset":3510},"indent":[]}},{"type":"link","title":null,"url":"https://greensock.com/3-release-notes","children":[{"type":"text","value":"updated to version 3","position":{"start":{"line":133,"column":20,"offset":3511},"end":{"line":133,"column":40,"offset":3531},"indent":[]}}],"position":{"start":{"line":133,"column":19,"offset":3510},"end":{"line":133,"column":80,"offset":3571},"indent":[]}},{"type":"text","value":" and got rid of the all lite / max varieties so feel free to ignore that distinction in older code examples or.","position":{"start":{"line":133,"column":80,"offset":3571},"end":{"line":133,"column":191,"offset":3682},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3492},"end":{"line":133,"column":191,"offset":3682},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":135,"column":1,"offset":3684},"end":{"line":135,"column":7,"offset":3690},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"The Bare Essentials of Greensock\",\"slug\":\"greensock-essentials\",\"updated\":\"2020-09-08T00:00:00.000Z\",\"published\":true,\"type\":[\"note\"],\"topics\":[\"Scrollytelling\",\"Design\",\"JavaScript\",\"Web Development\",\"Greensock\"],\"growthStage\":\"Budding\"}","position":{"start":{"line":137,"column":1,"offset":3692},"end":{"line":137,"column":277,"offset":3968},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":137,"column":277,"offset":3968}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The Bare Essentials of Greensock\",\n  \"slug\": \"greensock-essentials\",\n  \"updated\": \"2020-09-08T00:00:00.000Z\",\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"topics\": [\"Scrollytelling\", \"Design\", \"JavaScript\", \"Web Development\", \"Greensock\"],\n  \"growthStage\": \"Budding\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar IntroParagraph = makeShortcode(\"IntroParagraph\");\nvar GsapScroller = makeShortcode(\"GsapScroller\");\nvar Spacer = makeShortcode(\"Spacer\");\nvar Center = makeShortcode(\"Center\");\nvar TweenRedBigBox = makeShortcode(\"TweenRedBigBox\");\nvar TweenSpinningBox = makeShortcode(\"TweenSpinningBox\");\nvar TweenReverseSpinningBox = makeShortcode(\"TweenReverseSpinningBox\");\nvar TweenBlueRedBox = makeShortcode(\"TweenBlueRedBox\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(IntroParagraph, {\n    mdxType: \"IntroParagraph\"\n  }, mdx(\"p\", null, \"When it comes to web animation libraries,  \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://greensock.com/\"\n  }), \"Greensock\"), \" is the Rolls Royce of options. It's what powers most of those ridiculously fancy \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.awwwards.com/\"\n  }), \"Awwwards\"), \" websites.\")), mdx(\"p\", null, \"It's also been on my learning wish list for too long. I assumed it would be too complex. Everyone talks about how powerful the library is.\", mdx(\"p\", null, \"It's usually safe to assume powerful === complex.\"), mdx(\"p\", null, \"But once I started digging in I realised the core of the library was actually quite easy to get the hang of. There's plenty of advanced mechanisms and complexity to get wrapped up in if you want to. But they're entirely optional.\"), mdx(\"p\", null, \"This is a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"one-scoop-plain-vanilla introduction to Greensock\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Without any sprinkles, nuts, or advanced functionality.\")), mdx(GsapScroller, {\n    mdxType: \"GsapScroller\"\n  }), mdx(Spacer, {\n    mdxType: \"Spacer\"\n  }), mdx(\"h3\", null, \"Tweens\"), mdx(\"p\", null, \"Tweens are the basic building blocks of a Greensock animation. A tween is a single transition \\u2013 an element changing from state A to state B.\", mdx(\"p\", null, \"To create a tween, we target an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"element\"), \" (this can be any HTML element like a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<div>, <p>, or <svg>\"), \") and pass in \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"variables\"), \".\\nVariables define how the element should change over the course of the animation - whether it should move, change opacity or colour, grow big or small \\u2013 you get it.\"), mdx(\"p\", null, \"Let's say we want to make a box go from navy blue to red, move 400 pixels on the X axis (horizontal), and grow in scale by 1.4 times the original:\")), mdx(Center, {\n    mdxType: \"Center\"\n  }, mdx(TweenRedBigBox, {\n    mdxType: \"TweenRedBigBox\"\n  })), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"<div class=\\\"giantRedBox\\\" background=\\\"navyblue\\\" width=\\\"100px\\\" height=\\\"100px\\\" />\\n\\ngsap.to('.giantRedBox', 2, { x: 400, scale: 1.4, background: 'red' })\\n\")), mdx(\"p\", null, mdx(\"p\", null, \"Here's the code to do that in Greensock.\")), mdx(\"p\", null, mdx(\"p\", null, \"First we target the element using it's classname: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"giantRedBox\"), \".\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"We then pass in a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"duration\"), \" that defines how long it should take the animation to move from state A to state B \\u2013 here it's 2 seconds.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Finally we pass in an object that contains our animation \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"variables\"), \":\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"{ x: 400, scale: 1.4, background: 'red' }\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Types of Tweens\"), mdx(\"p\", null, \"There's three types of tweens:\"), mdx(\"ul\", null, mdx(\"li\", null, \"to\"), mdx(\"li\", null, \"from\"), mdx(\"li\", null, \"fromTo\")), mdx(\"p\", null, \"In \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"to\"), \" we define the final state of the animation \\u2013 what it looks like by the end.\\nIt begins in the position defined in our HTML & CSS, and moves \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"to\"), \" the state we define inside our greensock tween.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"<div class=\\\"spinningBox\\\" background=\\\"navyblue\\\" width=\\\"100px\\\" height=\\\"100px\\\" />\\n\\ngsap.to('.spinningBox', 3, { x: 400, rotation: 360 })\\n\")), mdx(Center, {\n    mdxType: \"Center\"\n  }, mdx(TweenSpinningBox, {\n    mdxType: \"TweenSpinningBox\"\n  })), mdx(Spacer, {\n    mdxType: \"Spacer\"\n  }), mdx(\"p\", null, \"In \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"from\"), \" we define the beginning state of the animation, and it moves back to it's state defined in the HTML & CSS\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"gsap.from('.reverseSpinningBox', 3, { x: 400, rotation: 360 })\\n\")), mdx(Center, {\n    mdxType: \"Center\"\n  }, mdx(TweenReverseSpinningBox, {\n    mdxType: \"TweenReverseSpinningBox\"\n  })), mdx(Spacer, {\n    mdxType: \"Spacer\"\n  }), mdx(\"p\", null, \"In \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"fromTo\"), \" we declare two states we want the animation to move between.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"gsap.fromTo('.hotBox', 3, { background: '#93D0D9' }, { background: '#D93654' })\\n\")), mdx(Center, {\n    mdxType: \"Center\"\n  }, mdx(TweenBlueRedBox, {\n    mdxType: \"TweenBlueRedBox\"\n  })), mdx(\"hr\", null), mdx(\"h3\", null, \"Timelines\"), mdx(\"p\", null, \"Timelines are made up of tweens.\\nThey group them together into a sequence.\"), mdx(\"p\", null, \"Once we declare a timeline, we can chain sets of tweens onto it.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const boxTimeline = gsap.timeline()\\n\\nboxTimeline\\n.to('.flyingBox', 2, { x: 100, scale: 1.5 })\\n.to('.floatingBox', 3, { x: 10 })\\n.to('.flippingBox', 1, { rotation: 360 })\\n\")), mdx(\"hr\", null), mdx(\"p\", null, \"You may see references around to multiple varieties of tweening and timelines called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TweenMax\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TweenLite\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TimelineMax\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TimelineLite\"), \".  \"), mdx(\"p\", null, \"In late 2019 GSAP \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://greensock.com/3-release-notes\"\n  }), \"updated to version 3\"), \" and got rid of the all lite / max varieties so feel free to ignore that distinction in older code examples or.\"), mdx(\"br\", null));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"The Bare Essentials of Greensock\",\n  \"slug\": \"greensock-essentials\",\n  \"updated\": \"2020-09-08T00:00:00.000Z\",\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"topics\": [\"Scrollytelling\", \"Design\", \"JavaScript\", \"Web Development\", \"Greensock\"],\n  \"growthStage\": \"Budding\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst IntroParagraph = makeShortcode(\"IntroParagraph\");\nconst GsapScroller = makeShortcode(\"GsapScroller\");\nconst Spacer = makeShortcode(\"Spacer\");\nconst Center = makeShortcode(\"Center\");\nconst TweenRedBigBox = makeShortcode(\"TweenRedBigBox\");\nconst TweenSpinningBox = makeShortcode(\"TweenSpinningBox\");\nconst TweenReverseSpinningBox = makeShortcode(\"TweenReverseSpinningBox\");\nconst TweenBlueRedBox = makeShortcode(\"TweenBlueRedBox\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <IntroParagraph mdxType=\"IntroParagraph\">\n      <p>{`When it comes to web animation libraries,  `}<a parentName=\"p\" {...{\n          \"href\": \"https://greensock.com/\"\n        }}>{`Greensock`}</a>{` is the Rolls Royce of options. It's what powers most of those ridiculously fancy `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.awwwards.com/\"\n        }}>{`Awwwards`}</a>{` websites.`}</p>\n    </IntroParagraph>\n    <p>It's also been on my learning wish list for too long. I assumed it would be too complex. Everyone talks about how powerful the library is.\n      <p>{`It's usually safe to assume powerful === complex.`}</p>\n      <p>{`But once I started digging in I realised the core of the library was actually quite easy to get the hang of. There's plenty of advanced mechanisms and complexity to get wrapped up in if you want to. But they're entirely optional.`}</p>\n      <p>{`This is a `}<strong parentName=\"p\">{`one-scoop-plain-vanilla introduction to Greensock`}</strong>{`.`}<br parentName=\"p\"></br>{`\n`}{`Without any sprinkles, nuts, or advanced functionality.`}</p></p>\n    <GsapScroller mdxType=\"GsapScroller\" />\n    <Spacer mdxType=\"Spacer\" />\n    <h3>Tweens</h3>\n    <p>\nTweens are the basic building blocks of a Greensock animation. A tween is a single transition – an element changing from state A to state B.\n      <p>{`To create a tween, we target an `}<em parentName=\"p\">{`element`}</em>{` (this can be any HTML element like a `}<inlineCode parentName=\"p\">{`<div>, <p>, or <svg>`}</inlineCode>{`) and pass in `}<em parentName=\"p\">{`variables`}</em>{`.\nVariables define how the element should change over the course of the animation - whether it should move, change opacity or colour, grow big or small – you get it.`}</p>\n      <p>{`Let's say we want to make a box go from navy blue to red, move 400 pixels on the X axis (horizontal), and grow in scale by 1.4 times the original:`}</p>\n    </p>\n    <Center mdxType=\"Center\">\n      <TweenRedBigBox mdxType=\"TweenRedBigBox\" />\n    </Center>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<div class=\"giantRedBox\" background=\"navyblue\" width=\"100px\" height=\"100px\" />\n\ngsap.to('.giantRedBox', 2, { x: 400, scale: 1.4, background: 'red' })\n`}</code></pre>\n    <p>\n      <p>{`Here's the code to do that in Greensock.`}</p>\n    </p>\n    <p>\n      <p>{`First we target the element using it's classname: `}<inlineCode parentName=\"p\">{`giantRedBox`}</inlineCode>{`.`}<br parentName=\"p\"></br>{`\n`}{`We then pass in a `}<em parentName=\"p\">{`duration`}</em>{` that defines how long it should take the animation to move from state A to state B – here it's 2 seconds.`}<br parentName=\"p\"></br>{`\n`}{`Finally we pass in an object that contains our animation `}<em parentName=\"p\">{`variables`}</em>{`:`}<br parentName=\"p\"></br>{`\n`}<inlineCode parentName=\"p\">{`{ x: 400, scale: 1.4, background: 'red' }`}</inlineCode></p>\n    </p>\n    <hr></hr>\n    <h3>{`Types of Tweens`}</h3>\n    <p>{`There's three types of tweens:`}</p>\n    <ul>\n      <li>to</li>\n      <li>from</li>\n      <li>fromTo</li>\n    </ul>\n    <p>{`In `}<em parentName=\"p\">{`to`}</em>{` we define the final state of the animation – what it looks like by the end.\nIt begins in the position defined in our HTML & CSS, and moves `}<em parentName=\"p\">{`to`}</em>{` the state we define inside our greensock tween.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<div class=\"spinningBox\" background=\"navyblue\" width=\"100px\" height=\"100px\" />\n\ngsap.to('.spinningBox', 3, { x: 400, rotation: 360 })\n`}</code></pre>\n    <Center mdxType=\"Center\">\n      <TweenSpinningBox mdxType=\"TweenSpinningBox\" />\n    </Center>\n    <Spacer mdxType=\"Spacer\" />\n    <p>{`In `}<em parentName=\"p\">{`from`}</em>{` we define the beginning state of the animation, and it moves back to it's state defined in the HTML & CSS`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`gsap.from('.reverseSpinningBox', 3, { x: 400, rotation: 360 })\n`}</code></pre>\n    <Center mdxType=\"Center\">\n      <TweenReverseSpinningBox mdxType=\"TweenReverseSpinningBox\" />\n    </Center>\n    <Spacer mdxType=\"Spacer\" />\n    <p>{`In `}<em parentName=\"p\">{`fromTo`}</em>{` we declare two states we want the animation to move between.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`gsap.fromTo('.hotBox', 3, { background: '#93D0D9' }, { background: '#D93654' })\n`}</code></pre>\n    <Center mdxType=\"Center\">\n      <TweenBlueRedBox mdxType=\"TweenBlueRedBox\" />\n    </Center>\n    <hr></hr>\n    <h3>{`Timelines`}</h3>\n    <p>{`Timelines are made up of tweens.\nThey group them together into a sequence.`}</p>\n    <p>{`Once we declare a timeline, we can chain sets of tweens onto it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const boxTimeline = gsap.timeline()\n\nboxTimeline\n.to('.flyingBox', 2, { x: 100, scale: 1.5 })\n.to('.floatingBox', 3, { x: 10 })\n.to('.flippingBox', 1, { rotation: 360 })\n`}</code></pre>\n    <hr></hr>\n    <p>{`You may see references around to multiple varieties of tweening and timelines called `}<inlineCode parentName=\"p\">{`TweenMax`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`TweenLite`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`TimelineMax`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`TimelineLite`}</inlineCode>{`.  `}</p>\n    <p>{`In late 2019 GSAP `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/3-release-notes\"\n      }}>{`updated to version 3`}</a>{` and got rid of the all lite / max varieties so feel free to ignore that distinction in older code examples or.`}</p>\n    <br />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}