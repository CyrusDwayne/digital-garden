{"expireTime":9007200867590241000,"key":"gatsby-plugin-mdx-entire-payload-777e2f7715e8ca267fd3dccf795b0d03-","val":{"mdast":{"type":"root","children":[{"type":"jsx","value":"<FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114496/maggieappleton.com/databases-101/DB_1.jpg\" alt=\"Databases 101 - How to build yourself a digital shelf\" />","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":231,"offset":231},"indent":[]}},{"type":"jsx","value":"<FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114495/maggieappleton.com/databases-101/DB_2.jpg\" alt=\"Databases are the storage shelves of the digital world. They're where we store all our masses of information.\" />","position":{"start":{"line":4,"column":1,"offset":233},"end":{"line":4,"column":287,"offset":519},"indent":[]}},{"type":"jsx","value":"<FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114496/maggieappleton.com/databases-101/DB_3.jpg\" alt=\"Every database has a DBMS - a database management system. This structures how we organise and interact with all our stored data. We have 4 fundamental ways we interact with databases. We can create, read, update, and delete. Better known as CRUD.\" />","position":{"start":{"line":6,"column":1,"offset":521},"end":{"line":6,"column":424,"offset":944},"indent":[]}},{"type":"jsx","value":"<FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114497/maggieappleton.com/databases-101/DB_4.jpg\" alt=\"These DBMS's come in two flavours. Relational DB's organise data in tables made of columns and rows. Columns are type and each row inside them holds a data entry. They're highly structured and have strict data types. We talk to them using SQL - structured query language.\" />","position":{"start":{"line":8,"column":1,"offset":946},"end":{"line":8,"column":449,"offset":1394},"indent":[]}},{"type":"jsx","value":"<FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114497/maggieappleton.com/databases-101/DB_5.jpg\" alt=\"The second DB type is non-relational, also known as NoSQL. These include graph, kay value, document, and column family types. These are more flexible systems with less strictness around data types. They're good for getting a database up and running quickly since you don't have to create a strict schema before adding the data. They're also good for deploying data across decentralised distributed networks. Of the top five most popoular DBMS services, four are relational and one is NoSQL.\" />","position":{"start":{"line":11,"column":1,"offset":1397},"end":{"line":11,"column":668,"offset":2064},"indent":[]}},{"type":"jsx","value":"<FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114669/maggieappleton.com/databases-101/DB_6.jpg\" alt=\"A winners stage ranking the five most popular database services\" />","position":{"start":{"line":13,"column":1,"offset":2066},"end":{"line":13,"column":241,"offset":2306},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":15,"column":1,"offset":2308},"end":{"line":15,"column":5,"offset":2312},"indent":[]}},{"type":"jsx","value":"<div style=\"display: flex;\n  flex-direction: row;\n  align-content: center;\n  margin-top: 60px;\">","position":{"start":{"line":17,"column":1,"offset":2314},"end":{"line":20,"column":22,"offset":2410},"indent":[1,1,1]}},{"type":"jsx","value":"<div>","position":{"start":{"line":22,"column":1,"offset":2412},"end":{"line":22,"column":6,"offset":2417},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Keep Learning","position":{"start":{"line":24,"column":5,"offset":2423},"end":{"line":24,"column":18,"offset":2436},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":2419},"end":{"line":24,"column":19,"offset":2437},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"jsx","value":"<a href=\"https://egghead.io/courses/sql-fundamentals?rc=272bjb\">SQL Fundamentals</a> course with Tyler Clark","position":{"start":{"line":26,"column":3,"offset":2441},"end":{"line":26,"column":111,"offset":2549},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2439},"end":{"line":27,"column":1,"offset":2550},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"jsx","value":"<a href=\"https://egghead.io/courses/get-started-with-postgresql?rc=272bjb\">Get Started With PostgreSQL</a> course with Brett Cassette","position":{"start":{"line":28,"column":3,"offset":2553},"end":{"line":28,"column":136,"offset":2686},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":2551},"end":{"line":28,"column":136,"offset":2686},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2439},"end":{"line":28,"column":136,"offset":2686},"indent":[1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":30,"column":1,"offset":2688},"end":{"line":30,"column":7,"offset":2694},"indent":[]}},{"type":"jsx","value":"<div>","position":{"start":{"line":32,"column":1,"offset":2696},"end":{"line":32,"column":6,"offset":2701},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"References","position":{"start":{"line":34,"column":5,"offset":2707},"end":{"line":34,"column":15,"offset":2717},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":2703},"end":{"line":34,"column":16,"offset":2718},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"jsx","value":"<a href=\"https://medium.freecodecamp.org/nosql-databases-5f6639ed9574\">Basics of NoSQL Databases</a> by freeCodeCamp","position":{"start":{"line":36,"column":3,"offset":2722},"end":{"line":36,"column":119,"offset":2838},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":2720},"end":{"line":37,"column":1,"offset":2839},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"jsx","value":"<a href=\"https://thomaslarock.com/2018/07/databases-101/\">Databases 101</a> by Thomas LaRock","position":{"start":{"line":38,"column":3,"offset":2842},"end":{"line":38,"column":95,"offset":2934},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":2840},"end":{"line":39,"column":1,"offset":2935},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"jsx","value":"<a href=\"https://www.sitepoint.com/sql-vs-nosql-differences/\">SQL vs NoSQL: The Differences</a> from SitePoint","position":{"start":{"line":40,"column":3,"offset":2938},"end":{"line":40,"column":113,"offset":3048},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2936},"end":{"line":41,"column":1,"offset":3049},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"jsx","value":"<a href=\"https://www.mongodb.com/nosql-explained\">What is NoSQL?</a> from MongoDB","position":{"start":{"line":42,"column":3,"offset":3052},"end":{"line":42,"column":84,"offset":3133},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":3050},"end":{"line":42,"column":84,"offset":3133},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":2720},"end":{"line":42,"column":84,"offset":3133},"indent":[1,1,1,1,1,1]}},{"type":"jsx","value":"</div>","position":{"start":{"line":44,"column":1,"offset":3135},"end":{"line":44,"column":7,"offset":3141},"indent":[]}},{"type":"jsx","value":"</div>","position":{"start":{"line":46,"column":1,"offset":3143},"end":{"line":46,"column":7,"offset":3149},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"updated\":\"2019-05-10T00:00:00.000Z\",\"title\":\"A Shelfish Starter Guide to Databases\",\"cover\":\"./thumb@2x.png\",\"slug\":\"databases\",\"published\":true,\"description\":\"The absolute minimum you need to know about data storage.\",\"type\":[\"essay\"],\"topics\":[\"Development\",\"Databases\"]}","position":{"start":{"line":48,"column":1,"offset":3151},"end":{"line":48,"column":304,"offset":3454},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":48,"column":304,"offset":3454}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"updated\": \"2019-05-10T00:00:00.000Z\",\n  \"title\": \"A Shelfish Starter Guide to Databases\",\n  \"cover\": \"./thumb@2x.png\",\n  \"slug\": \"databases\",\n  \"published\": true,\n  \"description\": \"The absolute minimum you need to know about data storage.\",\n  \"type\": [\"essay\"],\n  \"topics\": [\"Development\", \"Databases\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar FullWidthImage = makeShortcode(\"FullWidthImage\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(FullWidthImage, {\n    width: \"940px\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114496/maggieappleton.com/databases-101/DB_1.jpg\",\n    alt: \"Databases 101 - How to build yourself a digital shelf\",\n    mdxType: \"FullWidthImage\"\n  }), mdx(FullWidthImage, {\n    width: \"940px\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114495/maggieappleton.com/databases-101/DB_2.jpg\",\n    alt: \"Databases are the storage shelves of the digital world. They're where we store all our masses of information.\",\n    mdxType: \"FullWidthImage\"\n  }), mdx(FullWidthImage, {\n    width: \"940px\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114496/maggieappleton.com/databases-101/DB_3.jpg\",\n    alt: \"Every database has a DBMS - a database management system. This structures how we organise and interact with all our stored data. We have 4 fundamental ways we interact with databases. We can create, read, update, and delete. Better known as CRUD.\",\n    mdxType: \"FullWidthImage\"\n  }), mdx(FullWidthImage, {\n    width: \"940px\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114497/maggieappleton.com/databases-101/DB_4.jpg\",\n    alt: \"These DBMS's come in two flavours. Relational DB's organise data in tables made of columns and rows. Columns are type and each row inside them holds a data entry. They're highly structured and have strict data types. We talk to them using SQL - structured query language.\",\n    mdxType: \"FullWidthImage\"\n  }), mdx(FullWidthImage, {\n    width: \"940px\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114497/maggieappleton.com/databases-101/DB_5.jpg\",\n    alt: \"The second DB type is non-relational, also known as NoSQL. These include graph, kay value, document, and column family types. These are more flexible systems with less strictness around data types. They're good for getting a database up and running quickly since you don't have to create a strict schema before adding the data. They're also good for deploying data across decentralised distributed networks. Of the top five most popoular DBMS services, four are relational and one is NoSQL.\",\n    mdxType: \"FullWidthImage\"\n  }), mdx(FullWidthImage, {\n    width: \"940px\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114669/maggieappleton.com/databases-101/DB_6.jpg\",\n    alt: \"A winners stage ranking the five most popular database services\",\n    mdxType: \"FullWidthImage\"\n  }), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"row\",\n      \"alignContent\": \"center\",\n      \"marginTop\": \"60px\"\n    }\n  }, mdx(\"div\", null, mdx(\"h3\", null, \"Keep Learning\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://egghead.io/courses/sql-fundamentals?rc=272bjb\"\n  }, \"SQL Fundamentals\"), \" course with Tyler Clark\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://egghead.io/courses/get-started-with-postgresql?rc=272bjb\"\n  }, \"Get Started With PostgreSQL\"), \" course with Brett Cassette\"))), mdx(\"div\", null, mdx(\"h3\", null, \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://medium.freecodecamp.org/nosql-databases-5f6639ed9574\"\n  }, \"Basics of NoSQL Databases\"), \" by freeCodeCamp\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://thomaslarock.com/2018/07/databases-101/\"\n  }, \"Databases 101\"), \" by Thomas LaRock\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://www.sitepoint.com/sql-vs-nosql-differences/\"\n  }, \"SQL vs NoSQL: The Differences\"), \" from SitePoint\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://www.mongodb.com/nosql-explained\"\n  }, \"What is NoSQL?\"), \" from MongoDB\")))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"updated\": \"2019-05-10T00:00:00.000Z\",\n  \"title\": \"A Shelfish Starter Guide to Databases\",\n  \"cover\": \"./thumb@2x.png\",\n  \"slug\": \"databases\",\n  \"published\": true,\n  \"description\": \"The absolute minimum you need to know about data storage.\",\n  \"type\": [\"essay\"],\n  \"topics\": [\"Development\", \"Databases\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst FullWidthImage = makeShortcode(\"FullWidthImage\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114496/maggieappleton.com/databases-101/DB_1.jpg\" alt=\"Databases 101 - How to build yourself a digital shelf\" mdxType=\"FullWidthImage\" />\n    <FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114495/maggieappleton.com/databases-101/DB_2.jpg\" alt=\"Databases are the storage shelves of the digital world. They're where we store all our masses of information.\" mdxType=\"FullWidthImage\" />\n    <FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114496/maggieappleton.com/databases-101/DB_3.jpg\" alt=\"Every database has a DBMS - a database management system. This structures how we organise and interact with all our stored data. We have 4 fundamental ways we interact with databases. We can create, read, update, and delete. Better known as CRUD.\" mdxType=\"FullWidthImage\" />\n    <FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114497/maggieappleton.com/databases-101/DB_4.jpg\" alt=\"These DBMS's come in two flavours. Relational DB's organise data in tables made of columns and rows. Columns are type and each row inside them holds a data entry. They're highly structured and have strict data types. We talk to them using SQL - structured query language.\" mdxType=\"FullWidthImage\" />\n    <FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114497/maggieappleton.com/databases-101/DB_5.jpg\" alt=\"The second DB type is non-relational, also known as NoSQL. These include graph, kay value, document, and column family types. These are more flexible systems with less strictness around data types. They're good for getting a database up and running quickly since you don't have to create a strict schema before adding the data. They're also good for deploying data across decentralised distributed networks. Of the top five most popoular DBMS services, four are relational and one is NoSQL.\" mdxType=\"FullWidthImage\" />\n    <FullWidthImage width=\"940px\" src=\"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,f_auto,q_100,w_1200/v1594114669/maggieappleton.com/databases-101/DB_6.jpg\" alt=\"A winners stage ranking the five most popular database services\" mdxType=\"FullWidthImage\" />\n    <hr></hr>\n    <div style=\"display: flex;\n  flex-direction: row;\n  align-content: center;\n  margin-top: 60px;\">\n      <div>\n        <h3>{`Keep Learning`}</h3>\n        <ul>\n          <li parentName=\"ul\">\n            <a href=\"https://egghead.io/courses/sql-fundamentals?rc=272bjb\">SQL Fundamentals</a> course with Tyler Clark\n          </li>\n          <li parentName=\"ul\">\n            <a href=\"https://egghead.io/courses/get-started-with-postgresql?rc=272bjb\">Get Started With PostgreSQL</a> course with Brett Cassette\n          </li>\n        </ul>\n      </div>\n      <div>\n        <h3>{`References`}</h3>\n        <ul>\n          <li parentName=\"ul\">\n            <a href=\"https://medium.freecodecamp.org/nosql-databases-5f6639ed9574\">Basics of NoSQL Databases</a> by freeCodeCamp\n          </li>\n          <li parentName=\"ul\">\n            <a href=\"https://thomaslarock.com/2018/07/databases-101/\">Databases 101</a> by Thomas LaRock\n          </li>\n          <li parentName=\"ul\">\n            <a href=\"https://www.sitepoint.com/sql-vs-nosql-differences/\">SQL vs NoSQL: The Differences</a> from SitePoint\n          </li>\n          <li parentName=\"ul\">\n            <a href=\"https://www.mongodb.com/nosql-explained\">What is NoSQL?</a> from MongoDB\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}