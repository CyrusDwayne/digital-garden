{"expireTime":9007200867590239000,"key":"gatsby-plugin-mdx-entire-payload-b28376ef7848f9c6dd40892c3b41b881-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"A ","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":6,"offset":6},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Pattern Language","position":{"start":{"line":2,"column":8,"offset":8},"end":{"line":2,"column":24,"offset":24},"indent":[]}}],"position":{"start":{"line":2,"column":6,"offset":6},"end":{"line":2,"column":26,"offset":26},"indent":[]}},{"type":"text","value":" is a set of flexible, reusable solutions to common design problems.","position":{"start":{"line":2,"column":26,"offset":26},"end":{"line":2,"column":94,"offset":94},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":94,"offset":94},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These patterns evolve naturally within systems, and are found rather than crafted. Identifying and recognising these patterns gives us a framework to craft solutions with. ","position":{"start":{"line":4,"column":1,"offset":96},"end":{"line":4,"column":173,"offset":268},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":96},"end":{"line":4,"column":173,"offset":268},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There is no one way to implement a design pattern â€“ they are purposefully abstract enough that you can apply them to the situation at hand. They're guiding principles instead of formulaic instructions.","position":{"start":{"line":6,"column":1,"offset":271},"end":{"line":6,"column":202,"offset":472},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":271},"end":{"line":6,"column":202,"offset":472},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Christopher Alexander developed the idea of Pattern Languages in their 1977 book. ","position":{"start":{"line":8,"column":1,"offset":474},"end":{"line":8,"column":83,"offset":556},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":474},"end":{"line":8,"column":83,"offset":556},"indent":[]}},{"type":"jsx","value":"<ResourceBook style={{ marginTop: '0.4em' }} large url='https://en.wikipedia.org/wiki/A_Pattern_Language' img='https://images-na.ssl-images-amazon.com/images/I/61DirDeK3tL.jpg' title='A Pattern Language' author='Christopher Alexander' description='The book outlined a number of solutions for architecture and urban planning design, but the theory has since (appropriately) taken on a life of its own.' />","position":{"start":{"line":10,"column":1,"offset":558},"end":{"line":10,"column":405,"offset":962},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The programming community picked up on on Christopher Alexander's ideas in the late 1980's.","position":{"start":{"line":12,"column":1,"offset":964},"end":{"line":12,"column":92,"offset":1055},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":964},"end":{"line":12,"column":92,"offset":1055},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Despite the original book being primarily about public transportation tempos and cafe sidewalk strategies, the notion of design patterns heavily influenced the development of ","position":{"start":{"line":14,"column":1,"offset":1057},"end":{"line":14,"column":176,"offset":1232},"indent":[]}},{"type":"jsx","value":"<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\">","position":{"start":{"line":14,"column":176,"offset":1232},"end":{"line":14,"column":244,"offset":1300},"indent":[]}},{"type":"text","value":"Object-Oriented Programming","position":{"start":{"line":14,"column":244,"offset":1300},"end":{"line":14,"column":271,"offset":1327},"indent":[]}},{"type":"jsx","value":"</a>","position":{"start":{"line":14,"column":271,"offset":1327},"end":{"line":14,"column":275,"offset":1331},"indent":[]}},{"type":"text","value":" languages like Smalltalk and C++.","position":{"start":{"line":14,"column":275,"offset":1331},"end":{"line":14,"column":309,"offset":1365},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1057},"end":{"line":14,"column":309,"offset":1365},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In a charming presentation at the 1996 OOPSLA conference (Object-Oriented Programs, Systems, Languages and Applications, obviously), Alexander openly admits ","position":{"start":{"line":16,"column":1,"offset":1367},"end":{"line":16,"column":158,"offset":1524},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"\"I'm address a room full of people and I don't know hardly anything about what all of you do\"","position":{"start":{"line":16,"column":160,"offset":1526},"end":{"line":16,"column":253,"offset":1619},"indent":[]}}],"position":{"start":{"line":16,"column":158,"offset":1524},"end":{"line":16,"column":255,"offset":1621},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":16,"column":255,"offset":1621},"end":{"line":16,"column":256,"offset":1622},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1367},"end":{"line":16,"column":256,"offset":1622},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.youtube.com/watch?v=98LdFA-_zfA","children":[{"type":"text","value":"https://www.youtube.com/watch?v=98LdFA-_zfA","position":{"start":{"line":18,"column":1,"offset":1624},"end":{"line":18,"column":44,"offset":1667},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1624},"end":{"line":18,"column":44,"offset":1667},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":1624},"end":{"line":18,"column":44,"offset":1667},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Some computer scientist called me and said they had a group of people in Silicon Valley willing to pay $3,000 to have dinner with me... and I thought \"What the hell is this?\"","position":{"start":{"line":20,"column":3,"offset":1671},"end":{"line":20,"column":177,"offset":1845},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":1671},"end":{"line":20,"column":177,"offset":1845},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1669},"end":{"line":20,"column":177,"offset":1845},"indent":[]}},{"type":"jsx","value":"<p><a href=\"http://dreamsongs.com/SiteMap.html\">Richard Gabriel</a>, an engineer at IBM, was one of the ring leaders actively building these bridges between software and built landscapes.</p>","position":{"start":{"line":22,"column":1,"offset":1847},"end":{"line":22,"column":192,"offset":2038},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Pattern Languages\",\"slug\":\"pattern-languages\",\"updated\":\"2020-06-03T00:00:00.000Z\",\"aliases\":[\"Pattern Language\"],\"published\":true,\"type\":[\"note\"],\"growthStage\":\"Seedling\",\"topics\":[\"Design\"]}","position":{"start":{"line":30,"column":1,"offset":2046},"end":{"line":30,"column":231,"offset":2276},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":30,"column":231,"offset":2276}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Pattern Languages\",\n  \"slug\": \"pattern-languages\",\n  \"updated\": \"2020-06-03T00:00:00.000Z\",\n  \"aliases\": [\"Pattern Language\"],\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"growthStage\": \"Seedling\",\n  \"topics\": [\"Design\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar ResourceBook = makeShortcode(\"ResourceBook\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"A \", mdx(\"strong\", {\n    parentName: \"h2\"\n  }, \"Pattern Language\"), \" is a set of flexible, reusable solutions to common design problems.\"), mdx(\"p\", null, \"These patterns evolve naturally within systems, and are found rather than crafted. Identifying and recognising these patterns gives us a framework to craft solutions with. \"), mdx(\"p\", null, \"There is no one way to implement a design pattern \\u2013 they are purposefully abstract enough that you can apply them to the situation at hand. They're guiding principles instead of formulaic instructions.\"), mdx(\"p\", null, \"Christopher Alexander developed the idea of Pattern Languages in their 1977 book. \"), mdx(ResourceBook, {\n    style: {\n      marginTop: '0.4em'\n    },\n    large: true,\n    url: \"https://en.wikipedia.org/wiki/A_Pattern_Language\",\n    img: \"https://images-na.ssl-images-amazon.com/images/I/61DirDeK3tL.jpg\",\n    title: \"A Pattern Language\",\n    author: \"Christopher Alexander\",\n    description: \"The book outlined a number of solutions for architecture and urban planning design, but the theory has since (appropriately) taken on a life of its own.\",\n    mdxType: \"ResourceBook\"\n  }), mdx(\"p\", null, \"The programming community picked up on on Christopher Alexander's ideas in the late 1980's.\"), mdx(\"p\", null, \"Despite the original book being primarily about public transportation tempos and cafe sidewalk strategies, the notion of design patterns heavily influenced the development of \", mdx(\"a\", {\n    href: \"https://en.wikipedia.org/wiki/Object-oriented_programming\"\n  }, \"Object-Oriented Programming\"), \" languages like Smalltalk and C++.\"), mdx(\"p\", null, \"In a charming presentation at the 1996 OOPSLA conference (Object-Oriented Programs, Systems, Languages and Applications, obviously), Alexander openly admits \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\\"I'm address a room full of people and I don't know hardly anything about what all of you do\\\"\"), \".\"), mdx(\"p\", null, mdx(\"iframe\", _extends({\n    parentName: \"p\"\n  }, {\n    \"width\": \"100%\",\n    \"height\": 315,\n    \"src\": \"https://www.youtube-nocookie.com/embed/98LdFA-_zfA?rel=0\",\n    \"frameBorder\": \"0\",\n    \"allow\": \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    \"allowFullScreen\": true\n  }))), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Some computer scientist called me and said they had a group of people in Silicon Valley willing to pay $3,000 to have dinner with me... and I thought \\\"What the hell is this?\\\"\")), mdx(\"p\", null, mdx(\"a\", {\n    href: \"http://dreamsongs.com/SiteMap.html\"\n  }, \"Richard Gabriel\"), \", an engineer at IBM, was one of the ring leaders actively building these bridges between software and built landscapes.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Pattern Languages\",\n  \"slug\": \"pattern-languages\",\n  \"updated\": \"2020-06-03T00:00:00.000Z\",\n  \"aliases\": [\"Pattern Language\"],\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"growthStage\": \"Seedling\",\n  \"topics\": [\"Design\"]\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst ResourceBook = makeShortcode(\"ResourceBook\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2>{`A `}<strong parentName=\"h2\">{`Pattern Language`}</strong>{` is a set of flexible, reusable solutions to common design problems.`}</h2>\n    <p>{`These patterns evolve naturally within systems, and are found rather than crafted. Identifying and recognising these patterns gives us a framework to craft solutions with. `}</p>\n    <p>{`There is no one way to implement a design pattern â€“ they are purposefully abstract enough that you can apply them to the situation at hand. They're guiding principles instead of formulaic instructions.`}</p>\n    <p>{`Christopher Alexander developed the idea of Pattern Languages in their 1977 book. `}</p>\n    <ResourceBook style={{\n      marginTop: '0.4em'\n    }} large url='https://en.wikipedia.org/wiki/A_Pattern_Language' img='https://images-na.ssl-images-amazon.com/images/I/61DirDeK3tL.jpg' title='A Pattern Language' author='Christopher Alexander' description='The book outlined a number of solutions for architecture and urban planning design, but the theory has since (appropriately) taken on a life of its own.' mdxType=\"ResourceBook\" />\n    <p>{`The programming community picked up on on Christopher Alexander's ideas in the late 1980's.`}</p>\n    <p>{`Despite the original book being primarily about public transportation tempos and cafe sidewalk strategies, the notion of design patterns heavily influenced the development of `}<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\">{`Object-Oriented Programming`}</a>{` languages like Smalltalk and C++.`}</p>\n    <p>{`In a charming presentation at the 1996 OOPSLA conference (Object-Oriented Programs, Systems, Languages and Applications, obviously), Alexander openly admits `}<strong parentName=\"p\">{`\"I'm address a room full of people and I don't know hardly anything about what all of you do\"`}</strong>{`.`}</p>\n    <p><iframe parentName=\"p\" {...{\n        \"width\": \"100%\",\n        \"height\": 315,\n        \"src\": \"https://www.youtube-nocookie.com/embed/98LdFA-_zfA?rel=0\",\n        \"frameBorder\": \"0\",\n        \"allow\": \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        \"allowFullScreen\": true\n      }}></iframe></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Some computer scientist called me and said they had a group of people in Silicon Valley willing to pay $3,000 to have dinner with me... and I thought \"What the hell is this?\"`}</p>\n    </blockquote>\n    <p><a href=\"http://dreamsongs.com/SiteMap.html\">Richard Gabriel</a>, an engineer at IBM, was one of the ring leaders actively building these bridges between software and built landscapes.</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}