{"data":{"site":{"siteMetadata":{"title":"Maggie Appleton","description":"Maggie Appleton is an art director and anthropological designer. This is her digital garden for growing visual explanations about technology, culture, and programming","author":{"name":"Maggie Appleton"},"keywords":["Illustration, Tech"]}},"brainNote":{"slug":"fruit-comparison","title":"A Fruitful Guide to JavaScript's Comparison Operators","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"A Fruitful Guide to JavaScript's Comparison Operators\",\n  \"slug\": \"fruit-comparison\",\n  \"updated\": \"2019-02-14T00:00:00.000Z\",\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"topics\": [\"JavaScript\", \"Web Development\", \"Illustrated Notes\"],\n  \"growthStage\": \"Evergreen\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar IntroParagraph = makeShortcode(\"IntroParagraph\");\nvar BasicImage = makeShortcode(\"BasicImage\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_400/v1592833720/maggieappleton.com/egghead-course-notes/fruit-comparison/thumb_2x.png\",\n    \"alt\": \"One small apple being compared to a large pile of apples\"\n  }))), mdx(IntroParagraph, {\n    mdxType: \"IntroParagraph\"\n  }, mdx(\"p\", null, \"Comparing values is one of those essential developer skills that helps you write \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"conditionals\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"if / then statements, filters\"), \", and plenty more. Here's the apples and oranges guide to using them in JavaScript.\")), mdx(BasicImage, {\n    alt: \"Javascript's comparison operators give us a way of comparing values\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/v1592262865/maggieappleton.com/egghead-course-notes/fruit-comparison/FruitComparison_P1.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"Equality comes in loose and strict varieties. You should always use strict equality.\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/v1592262864/maggieappleton.com/egghead-course-notes/fruit-comparison/FruitComparison_P2.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"Inequality follows the same loose and strict rules as equality\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/v1592262862/maggieappleton.com/egghead-course-notes/fruit-comparison/FruitComparison_P3.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"Relational equality let's us check which value is greater\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/v1592262863/maggieappleton.com/egghead-course-notes/fruit-comparison/FruitComparison_P4.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(\"h4\", null, \"Want more illustrated notes on web development?\"), mdx(\"p\", null, \"Take a look at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/advancedjs\"\n  }), \"JavaScript Bits You Skipped the First Time Around\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/jsx\"\n  }), \"JSX is a Lovechild\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/spread\"\n  }), \"JavaScript's ...spread Operator\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"A Fruitful Guide to JavaScript's Comparison Operators","updated":"Feb 14, 2019","startDate":null,"slug":"fruit-comparison","topics":["JavaScript","Web Development","Illustrated Notes"],"growthStage":"Evergreen"}},"inboundReferenceNotes":[{"title":"Testing Apps with Cypress","slug":"cypress","childMdx":{"excerpt":"Illustrated notes on  Brett Cassette 's egghead course all about testing apps with  Cypress.io . Want more illustrated notes on web development? Take a look at  The JAMStack, Gatsby & Contentful ,  A…"}},{"title":"JSX is a Lovechild","slug":"jsx","childMdx":{"excerpt":"If you've had the pleasure of trying to stumble your way through learning React, you'll have been through the adjustment phase with JSX. Putting HTML and JS side-by-side feels like it's violating the…"}},{"title":"JavaScript's ...spread Operator","slug":"spread","childMdx":{"excerpt":"Spreading the elements from one array and copying them into is one of those handy shorthands for moving data around in JavaScript. I started looking into it after seeing   <ComponentName {...props…"}}],"outboundReferenceNotes":[{"title":"JavaScript Bits You Skipped the First Time Around","slug":"advancedjs","childMdx":{"excerpt":"Being humans, we rarely learn things linearly. No one begins their JavaScript journey by reading  the TC39 language specification  line-by-line like a pedantic masochist. Instead we all cobble together a good-enough understanding, leaving holes here and there to fill in later. So…"}},{"title":"JSX is a Lovechild","slug":"jsx","childMdx":{"excerpt":"If you've had the pleasure of trying to stumble your way through learning React, you'll have been through the adjustment phase with JSX. Putting HTML and JS side-by-side feels like it's violating the internet rules at first. It's just a new mashup - an awkward lovechild. Want…"}},{"title":"JavaScript's ...spread Operator","slug":"spread","childMdx":{"excerpt":"Spreading the elements from one array and copying them into is one of those handy shorthands for moving data around in JavaScript. I started looking into it after seeing   <ComponentName {...props} />  in lots of React projects, and couldn't figure out what on earth was going on…"}}]}},"pageContext":{"slug":"fruit-comparison"}}