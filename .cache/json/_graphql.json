{"data":{"site":{"siteMetadata":{"title":"Maggie Appleton","description":"Maggie Appleton is an art director and anthropological designer. This is her digital garden for growing visual explanations about technology, culture, and programming","author":{"name":"Maggie Appleton"},"keywords":["Illustration, Tech"]}},"brainNote":{"slug":"graphql","title":"Speaking the GraphQL Query Language","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Speaking the GraphQL Query Language\",\n  \"slug\": \"graphql\",\n  \"updated\": \"2019-07-30T00:00:00.000Z\",\n  \"published\": true,\n  \"type\": [\"note\"],\n  \"topics\": [\"Web Development\", \"Illustrated Notes\"],\n  \"growthStage\": \"Evergreen\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar TwoCol = makeShortcode(\"TwoCol\");\nvar Footnote = makeShortcode(\"Footnote\");\nvar ImageFrame = makeShortcode(\"ImageFrame\");\nvar BasicImage = makeShortcode(\"BasicImage\");\nvar Center = makeShortcode(\"Center\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(TwoCol, {\n    GridColCount: \"3fr 4fr\",\n    gridGap: \"2em\",\n    mdxType: \"TwoCol\"\n  }, mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_300/v1592859008/maggieappleton.com/egghead-course-notes/graphql/thumb_2x.png\",\n    \"alt\": \"Small GraphQL schema dictionary illustration\"\n  }))), mdx(\"span\", null, mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://graphql.org/\"\n  }), \"GraphQL\"), \" is undoubtedly one of the popular kids on the Web Development playground right now.\"), mdx(\"p\", null, \"If you haven't heard of GraphQL, the TLDR is that it's a new way to request data from an API. \", mdx(Footnote, {\n    idName: 1,\n    mdxType: \"Footnote\"\n  }, \"If you're unsure what an API is, head on over to my illustrated article on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/api\"\n  }), \"WTF is an API?\"))))), mdx(\"p\", null, \"One that's easier, faster, better, and stronger than the old \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Representational_state_transfer\"\n  }), \"RESTful API system\")), mdx(\"p\", null, \"If you're lucky enough to already grok GraphQL, you'll know the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"QL\"), \" stands for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Query Language\"), \" \\u2013 aka. the language we talk to our GraphQL API in.  \"), mdx(\"p\", null, \"It's not a terribly complex language, but you'll still need to do some syntax studying to get the hang of it.\"), mdx(\"p\", null, \"Thankfully the magnificent \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/eveporcello\"\n  }), \"Eve Porcello\"), \" made an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://egghead.io/courses/graphql-query-language\"\n  }), \"egghead course\"), \" that runs you through the full GraphQL vocabulary.\"), mdx(\"a\", {\n    noTip: true,\n    href: \"https://egghead.io/courses/graphql-query-language\"\n  }, mdx(ImageFrame, {\n    width: \"80%\",\n    alt: \"Course illustration of a set of dictionary books with the word 'schema' across them\",\n    src: \"https://og-image-egghead-course.now.sh/graphql-query-language\",\n    mdxType: \"ImageFrame\"\n  })), mdx(\"p\", null, \"It's a wonderful introduction for anyone new to the GraphQL ecosystem \\u2013 Eve explains all the parts of the playground interface that are not in the least bit intuitive. I'd been stumbling about in my own GraphQL queries lost and afraid until I worked through this.\"), mdx(\"p\", null, \"Anyways, as usual I drew some things:\"), mdx(BasicImage, {\n    alt: \"How to talk to a GraphQL API. We can use the graphQL playground to send queries to a GraphQL endpoint. The playground lets us explore our data before making any requests\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_700/v1592262603/maggieappleton.com/egghead-course-notes/graphql/graphql1.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"A query is a request for data. We open it with the query keyword and a set of curly braces. Curly braces wrap around a selection and say go look inside this object. Blank spaces at the end of a line are fields that say I want his data please. We can also add the 'total' and 'all' keywords in front of any list of objects.\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_900/v1592262605/maggieappleton.com/egghead-course-notes/graphql/graphql4.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"Inside the playground, ctrl + space is a magic combination that reveals all the available fields of a query\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_900/v1592262603/maggieappleton.com/egghead-course-notes/graphql/graphql2.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"We can filter our data by adding arguments to our queries. This means we only get the data we want. We can also use mutations to change the data. This includes creating, updating, and deleting data.\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/c_scale,w_900/v1592262604/maggieappleton.com/egghead-course-notes/graphql/graphql3.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(BasicImage, {\n    alt: \"The full GraphQL query language illustrated note\",\n    src: \"https://res.cloudinary.com/dg3gyk0gu/image/upload/v1592262601/maggieappleton.com/egghead-course-notes/graphql/graphql_sketchnotes--mini.png\",\n    mdxType: \"BasicImage\"\n  }), mdx(Center, {\n    mdxType: \"Center\"\n  }, mdx(\"h1\", null, \"Bonus Poster\")), mdx(\"p\", null, \"Twitter kept bugging me to make prints out of these illustrated notes, so this one is now purchaseable as a real life object on the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://store.egghead.io/\"\n  }), \"egghead store\"), \".\"), mdx(\"p\", null, \" There's framed versions and unframed, depending on how fancy you feel. You can \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://store.egghead.io/product/poster-graphql-query-language\"\n  }), \"buy one here\"), \" if you so desire.\"), mdx(TwoCol, {\n    gridGap: \"1em\",\n    mdxType: \"TwoCol\"\n  }, mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://store.egghead.io/static/ab87b8544078b8d5049501abf8b2eac7/e9055/thumb-graphql-query-language-by-eve-porcello_2x_dd5b8572-fca2-4c36-9e4e-d4bfc00a35fb.png\",\n    \"alt\": \"a framed graphql illustrated print\"\n  }))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://store.egghead.io/static/91261ff8c8395dbc141635030e138734/fd7f1/perspective_2x_420b9d42-49db-41ac-8aee-1b8fa25c56eb.png\",\n    \"alt\": \"a close-up image of one section of the print\"\n  })))), mdx(\"hr\", null), mdx(\"h3\", null, \"Want more illustrated notes on web development?\"), mdx(\"p\", null, \"Take a look at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/es2019\"\n  }), \"A Fresh Serving of JavaScript ES2019\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/contentful-gatsby\"\n  }), \"The JAMStack, Gatsby & Contentful\"), \" or \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/websecurity\"\n  }), \"Essential Web Security Tactics\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Speaking the GraphQL Query Language","updated":"Jul 30, 2019","startDate":null,"slug":"graphql","topics":["Web Development","Illustrated Notes"],"growthStage":"Evergreen"}},"inboundReferenceNotes":[{"title":"The Art and Craft of Gatsby Themes","slug":"building-gatsby-themes","childMdx":{"excerpt":"More illustrated notes, this time on  Gatsby themes . They're one of the newer features in  Gatsby.js  – little building blocks of site functionality you can mix n' match n' share on NPM. Chris…"}},{"title":"The JAMStack, Gatsby & Contentful","slug":"contentful-gatsby","childMdx":{"excerpt":"If you've been keeping up with the sweetest new static-site generation tools, you'll have heard of the JAMstack.  And if you havent, don't worry it's a niche web developer thing -  Jamstack WTF…"}},{"title":"Building VR Apps with React360","slug":"react360","childMdx":{"excerpt":"Turns out you can build almost anything in React now... including VR and AR apps inside a web browser. There's a version of React called  React 360  that simplifies the otherwise niche and overly…"}},{"title":"Instachatting with Vue & Socket.io","slug":"vuesocket","childMdx":{"excerpt":"The  intantness  of chat apps has always been a mystery to me. The technical details of moving emojis through The Internet Pipes and across continents in 0.004 miliseconds is well beyond my paygrade…"}}],"outboundReferenceNotes":[{"title":"A Fresh Serving of JavaScript ES2019","slug":"es2019","childMdx":{"excerpt":"A new version of JavaScript has landed! Every year JavaScript gets a handful of new features and functions for everyone to play with. The  TC39 committee  have  released the 2019 additions to  ECMAScript , which is the generally accepted version of JavaScript we all know and…"}},{"title":"The JAMStack, Gatsby & Contentful","slug":"contentful-gatsby","childMdx":{"excerpt":"If you've been keeping up with the sweetest new static-site generation tools, you'll have heard of the JAMstack.  And if you havent, don't worry it's a niche web developer thing -  Jamstack WTF  explains it pretty well. The TLDR here is that combining Javascript, APIs, and Markup…"}},{"title":"Defend Your Cookies with Essential Web Security Tactics","slug":"websecurity","childMdx":{"excerpt":"Between IoT botnet attacks, Bitcoin ransomware, and the weekly cadence of high-profile data breaches, doing anything on the internet feels like playing Russian Roulette. And that's just for normal people using it.   If you're a developer, you're partially  responsible  for…"}}]}},"pageContext":{"slug":"graphql"}}